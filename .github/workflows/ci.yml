name: SentryNavigation CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Update ROS GPG KEY
      run: |
        sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key F42ED6FBAB17C654
        sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C8B3A55A6F3EFCDE

    - name: Set up ROS
      uses: ros-tooling/setup-ros@v0.1
      with:
        distribution: 'noetic'
        version: '1.0'

    - name: Install dependencies
      run: |
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE || apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE
        sudo echo "deb https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main" > /etc/apt/sources.list.d/realsense.list
        sudo apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential cmake libeigen3-dev libpcl-dev libgoogle-glog-dev libudev-dev git libxrandr-dev libxi-dev libxinerama-dev libsdl2-dev libusb-1.0.0-dev
        sudo cp -rf /usr/include/eigen3/Eigen /usr/include/Eigen -R

    - name: Install thirdparty dependencies
      run: |
        for file in /home/nav_ws/thirdparty/*; do \
            if [ -f "$file" ]; then \
                case "$file" in \
                    *.tar.gz) tar -xzf "$file" -C /home/nav_ws/thirdparty ;; \
                    *.zip) unzip "$file" -d /home/nav_ws/thirdparty ;; \
                    *.tar.bz2) tar -xjf "$file" -C /home/nav_ws/thirdparty ;; \
                    *.tar.xz) tar -xJf "$file" -C /home/nav_ws/thirdparty ;; \
                esac; \
                rm "$file"; \
            fi; \
        done
        sudo find /home/nav_ws/thirdparty -name "install.sh" -type f -exec bash -c 'cd "$(dirname "{}")" && chmod 777 install.sh && ./install.sh' \;

    - name: Install ROS dependencies
      run: sudo apt-get install -y ros-noetic-rviz ros-noetic-cv-bridge ros-noetic-pcl-ros \
                                   ros-noetic-tf-conversions ros-noetic-eigen-conversions \
                                   ros-noetic-ddynamic-reconfigure ros-noetic-diagnostic-updater \
                                   ros-noetic-image-geometry ros-noetic-costmap-2d \
                                   ros-noetic-nav-core ros-noetic-navfn

    - name: Build the workspace
      run: |
        sudo chmod 777 build.sh
        ./build.sh

    - name: Run tests
      run: |
        exec bash
        source /opt/ros/noetic/setup.sh
        catkin_test_results build